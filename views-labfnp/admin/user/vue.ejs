var COMMON = {
  DOUBLE_CLICK_TIME_PERIOD: 250,
  DEFAULT_INDEX: -1,
  DEFAULT_AVATAR: "/assets/admin/img/avatars/default.png",
};

var itemBeforeEdit = {};
var modelName = "user";
var appModel = {
  modelName: modelName,
  data: {
    item: {
      avatar: '',
      displayName: '',
      username: '',
      email: '',
      firstName: '',
      lastName: '',
      password: '',
      Roles: [],
      RolesArray: [],
      Passports: [
        {
          password: ""
        }
      ]
    },
    items: [],
    option: {
      passwordConfirm: ''
    }
  },
  view: {
    table: {
      selectIndex: COMMON.DEFAULT_INDEX,
    },
  }
}

/* TABLETOOLS */


var columns = [
  { "data": "id" },
  { "data": "username" },
  { "data": "displayName" },
  { "data": "email" },
  { "data": "lastLogin" }
]

var columnDefs = [
  { "searchable": false, "targets": 2 },
  {
    "targets"  : 5,
    "orderable": false,
    "searchable": false,
    "render": function ( data, type, row ) {
      var colBody =
      '<td align="center" style="cursor: pointer;">'+
          '<a class="btn btn-default btn-xs" role="button" onclick="window.appMain.show('+row.id+')">'+
            '<i class="fa-fw fa fa-eye text-muted" />'+
          '</a>'+
          '<a class="btn btn-default btn-xs" role="button" onclick="window.appMain.edit('+row.id+')">'+
            '<i class="fa-fw fa fa-pencil-square-o text-muted"/>'+
          '</a>'+
        '</div>'+
      '</td>';


      return colBody;
    }
  },
]


window.appMain = new Vue({
  data: appModel,
  methods: {
    cancel: function (event) {
      appMain.onLeavePageEdit(function() {
        location.href = '/admin/#/admin/'+modelName;
      });
    },
    save: function (event) {
      $.ajax({
        url: '/api/admin/'+modelName,
        type: 'POST',
        dataType: 'json',
        data: appModel.data.item,
        xhrFields: {
          withCredentials: true,
        },
        success: ajaxSuccess,
        error: ajaxError,
      });

      function ajaxSuccess(result) {
        location.href = '/admin/#/admin/'+modelName;
        messageApp.show({desc: '新增成功！', type: 'success'});
      } // end ajaxSuccess

      function ajaxError(result) {
        messageApp.show({desc: '新增資料失敗！errorMessage: ' + result.responseJSON.message, type: 'error'});
      }
    },
    update: function (event) {
      $.ajax({
        url: '/api/admin/' + modelName + '/' + appModel.data.item.id,
        type: 'PUT',
        dataType: 'json',
        data: appModel.data.item,
        xhrFields: {
          withCredentials: true,
        },
        success: ajaxSuccess,
        error: ajaxError,
      });

      function ajaxSuccess(result) {
        location.href = '/admin/#/admin/' + modelName;
        messageApp.show({desc: '更新會員資料成功！', type: 'success'});
      } // end ajaxSuccess

      function ajaxError(result) {
        console.log(result);
        messageApp.show({desc: '更新資料失敗！errorMessage: ' + result.responseJSON.message, type: 'error'});
      }
    },
    loadItem: function (cb) {
      window.onbeforeunload = null;
      $.get('/api/admin/'+modelName+'/' + appModel.data.item.id, ajaxSuccess);

      function ajaxSuccess(result) {
        if (result.success) {
          appModel.data.item = result.data;
          appModel.data.option.passwordConfirm = result.data.Passports[0].password;
          var hasAvatar = typeof result.data.avatar === 'string';
          if (!hasAvatar) {
            appModel.data.item.avatar = COMMON.DEFAULT_AVATAR;
          }
        }
        if (typeof cb !== 'undefined') setTimeout(cb, 0);
      } // end ajaxSuccess
    },
    setupForm: function(type) {
      if (type === 'edit') {
        $('label.user').removeClass('state-disabled');
        $('input[name="user"]').removeAttr('chekced');
        $('input[name="user"]').removeAttr('disabled');
      }
      var registerForm = $("#main-form");
      registerForm.validate({
        // Rules for form validation
        rules : {
          username : {
            required : true
          },
          email : {
            required : true,
            email : true
          },
          firstname : {
            required : true
          },
          lastname : {
            required : true
          },
          password : {
            required : true,
            minlength : 3,
          },
          passwordConfirm : {
            required : true,
            minlength : 3,
            equalTo : '#password'
          },
        },

        // Messages for form validation
        messages : {
          username : {
            required : '請輸入使用者帳號'
          },
          email : {
            required : '請輸入 Email',
            email : '請確認輸入的 Email 格式'
          },
          firstname : {
            required : '請輸入使用者姓'
          },
          lastname : {
            required : '請輸入使用者名'
          },
          password : {
            required : '請輸入密碼'
          },
          passwordConfirm : {
            required : '請再次輸入密碼以便確認',
            equalTo : '請輸入相同的密碼'
          },
        },

        // Do not change code below
        errorPlacement : function(error, element) {
          error.insertAfter(element.parent());
        },

        submitHandler: function(form) {
          if (type == 'create') {
            appMain.save();
            return false;
          } else if(type == 'edit') {
            appMain.update();
            return false;
          }
        }
      });
    },
    isPageEditDataModified: function() {
      var itemBeforeLeave = JSON.stringify(appModel.data.item);
      var isDataModified = itemBeforeEdit !== itemBeforeLeave;
      if (!isDataModified) window.onbeforeunload = null;
      return isDataModified;
    },
    onEnterPageEdit: function() {
      itemBeforeEdit = JSON.stringify(appModel.data.item);
      window.onbeforeunload = function(e) {
        if (appMain.isPageEditDataModified()) {
          var message = '您已經修改過資料，是否確定要放棄本次的修改？';
          e.returnValue = message;
          return message;
        }
      };
    },
    onLeavePageEdit: function(cb) {
      if (appMain.isPageEditDataModified()) {
        var msgInfo = {
          title: '注意',
          content: '您已經修改過資料，是否確定要放棄本次的修改？',
          btnArray: ['放棄', '取消'],
        };
        var action = function(ButtonPressed) {
          if (ButtonPressed === '放棄') {
            setTimeout(function() {
              return cb();
            }, 500);
          }
        };
        messageApp.confirm(msgInfo, action);
      } else return cb();
    },
    loadItems: function (cb) {
      window.onbeforeunload = null;
      $.get('/api/admin/'+modelName, ajaxSuccess);

      function ajaxSuccess(result) {
        appModel.data.items = result.data.items;
        if (typeof cb !== 'undefined') setTimeout(cb, 0);
      } // end ajaxSuccess
    },
    renderTable: function() {
      <%- include ../tableDefine.ejs %>
    },
    dblclick: function(index) {
      var id = appModel.data.items[index].id;
      this.show(id);
    },
    selection: function (index) {
      if (index !== appModel.view.table.selectIndex) {
        appModel.view.table.selectIndex = index;
        console.log("appModel.view.table.selectIndex", appModel.view.table.selectIndex);
      } else {
        appModel.view.table.selectIndex = COMMON.DEFAULT_INDEX;
      }
    },
    show: function (id) {
      location.href = '/admin/#/admin/' + modelName + '/show/' + id;
    },
    edit: function (id) {
      location.href = '/admin/#/admin/' + modelName + '/edit/' + id;
    },
    delete: function() {
      messageApp.confirm({
        title: '刪除',
        content: '確認刪除此筆資料？',
        btnArray: ['刪除', '取消'],
      },
      function(ButtonPressed) {
        if (ButtonPressed ==='刪除') {
          $.ajax({
            url: '/api/admin/' + modelName + '/' + appModel.data.item.id,
            type: 'DELETE',
            dataType: 'json',
            xhrFields: {
              withCredentials: true
            },
            success: ajaxSuccess,
            error: ajaxError,
          });

          function ajaxSuccess(result) {
            appModel.view.table.selectIndex = COMMON.DEFAULT_INDEX;
            messageApp.show({desc: `刪除資料成功！`, type: 'success'});
            setTimeout(function() {
              location.href = '/admin/#/admin/' + modelName;
            }, 500);
          } // end ajaxSuccess

          function ajaxError(result) {
            messageApp.show({desc: '刪除資料失敗！errorMessage: ' + result.responseJSON.message, type: 'error'});
          }
        }
      });
    }
  },
});
